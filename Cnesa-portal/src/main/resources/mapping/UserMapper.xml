<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cnesa.authority.dao.UserDao">
  <resultMap id="BaseResultMap" type="com.cnesa.authority.entity.User">
    <constructor>
      <idArg column="id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="username" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="password" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="real_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="email" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="mobile" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="icon" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="fax_number" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="status" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="user_type" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="sex" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="birthday" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="org_id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="com_id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="token" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="region" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="location" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="position" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="prestore_a" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="prestore_b" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="prestore_c" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
    <result column="organizationName" property="organizationName" jdbcType="VARCHAR"/>
    <result column="companyName" property="companyName" jdbcType="VARCHAR"/>

    <collection property="rolesList" ofType="com.cnesa.authority.entity.Role">
      <id column="roleId" property="id"/>
      <result column="roleName" property="roleName"/>
    </collection>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, username, password, real_name, email, mobile, icon, fax_number, status, user_type, 
    sex, birthday, org_id, com_id, token, region, location, position, prestore_a, prestore_b,
    prestore_c, create_time
  </sql>
  <select id="selectByExample" parameterType="com.cnesa.authority.entity.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from AUTH_USER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from AUTH_USER
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from AUTH_USER
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.cnesa.authority.entity.UserExample">
    delete from AUTH_USER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cnesa.authority.entity.User">
    <selectKey keyProperty="id" resultType="String" order="BEFORE" keyColumn="id">
      SELECT UUID() AS id;
    </selectKey>
    insert into AUTH_USER (id, username, password,
    real_name, email, mobile,
    icon, fax_number, status,
    user_type, sex, birthday,
    org_id, com_id, token,
    region, location, position,
    prestore_a, prestore_b, prestore_c,
    create_time)
    values (#{id,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
    #{realName,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR},
    #{icon,jdbcType=VARCHAR}, #{faxNumber,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER},
    #{userType,jdbcType=INTEGER}, #{sex,jdbcType=INTEGER}, #{birthday,jdbcType=TIMESTAMP},
    #{orgId,jdbcType=VARCHAR}, #{comId,jdbcType=VARCHAR}, #{token,jdbcType=VARCHAR},
    #{region,jdbcType=VARCHAR}, #{location,jdbcType=VARCHAR}, #{position,jdbcType=VARCHAR},
    #{prestoreA,jdbcType=VARCHAR}, #{prestoreB,jdbcType=VARCHAR}, #{prestoreC,jdbcType=VARCHAR},
    #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.cnesa.authority.entity.User">
    <selectKey keyProperty="id" resultType="String" order="BEFORE" keyColumn="id">
      SELECT UUID() AS id;
    </selectKey>
    insert into AUTH_USER
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="realName != null">
        real_name,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="icon != null">
        icon,
      </if>
      <if test="faxNumber != null">
        fax_number,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="userType != null">
        user_type,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="orgId != null">
        org_id,
      </if>
      <if test="comId != null">
        com_id,
      </if>
      <if test="token != null">
        token,
      </if>
      <if test="region != null">
        region,
      </if>
      <if test="location != null">
        location,
      </if>
      <if test="position != null">
        position,
      </if>
      <if test="prestoreA != null">
        prestore_a,
      </if>
      <if test="prestoreB != null">
        prestore_b,
      </if>
      <if test="prestoreC != null">
        prestore_c,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="icon != null">
        #{icon,jdbcType=VARCHAR},
      </if>
      <if test="faxNumber != null">
        #{faxNumber,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="userType != null">
        #{userType,jdbcType=INTEGER},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="orgId != null">
        #{orgId,jdbcType=VARCHAR},
      </if>
      <if test="comId != null">
        #{comId,jdbcType=VARCHAR},
      </if>
      <if test="token != null">
        #{token,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        #{region,jdbcType=VARCHAR},
      </if>
      <if test="location != null">
        #{location,jdbcType=VARCHAR},
      </if>
      <if test="position != null">
        #{position,jdbcType=VARCHAR},
      </if>
      <if test="prestoreA != null">
        #{prestoreA,jdbcType=VARCHAR},
      </if>
      <if test="prestoreB != null">
        #{prestoreB,jdbcType=VARCHAR},
      </if>
      <if test="prestoreC != null">
        #{prestoreC,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cnesa.authority.entity.UserExample" resultType="java.lang.Long">
    select count(*) from AUTH_USER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update AUTH_USER
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.realName != null">
        real_name = #{record.realName,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.icon != null">
        icon = #{record.icon,jdbcType=VARCHAR},
      </if>
      <if test="record.faxNumber != null">
        fax_number = #{record.faxNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.userType != null">
        user_type = #{record.userType,jdbcType=INTEGER},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=INTEGER},
      </if>
      <if test="record.birthday != null">
        birthday = #{record.birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="record.orgId != null">
        org_id = #{record.orgId,jdbcType=VARCHAR},
      </if>
      <if test="record.comId != null">
        com_id = #{record.comId,jdbcType=VARCHAR},
      </if>
      <if test="record.token != null">
        token = #{record.token,jdbcType=VARCHAR},
      </if>
      <if test="record.region != null">
        region = #{record.region,jdbcType=VARCHAR},
      </if>
      <if test="record.location != null">
        location = #{record.location,jdbcType=VARCHAR},
      </if>
      <if test="record.position != null">
        position = #{record.position,jdbcType=VARCHAR},
      </if>
      <if test="record.prestoreA != null">
        prestore_a = #{record.prestoreA,jdbcType=VARCHAR},
      </if>
      <if test="record.prestoreB != null">
        prestore_b = #{record.prestoreB,jdbcType=VARCHAR},
      </if>
      <if test="record.prestoreC != null">
        prestore_c = #{record.prestoreC,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update AUTH_USER
    set id = #{record.id,jdbcType=VARCHAR},
    username = #{record.username,jdbcType=VARCHAR},
    password = #{record.password,jdbcType=VARCHAR},
    real_name = #{record.realName,jdbcType=VARCHAR},
    email = #{record.email,jdbcType=VARCHAR},
    mobile = #{record.mobile,jdbcType=VARCHAR},
    icon = #{record.icon,jdbcType=VARCHAR},
    fax_number = #{record.faxNumber,jdbcType=VARCHAR},
    status = #{record.status,jdbcType=INTEGER},
    user_type = #{record.userType,jdbcType=INTEGER},
    sex = #{record.sex,jdbcType=INTEGER},
    birthday = #{record.birthday,jdbcType=TIMESTAMP},
    org_id = #{record.orgId,jdbcType=VARCHAR},
    com_id = #{record.comId,jdbcType=VARCHAR},
    token = #{record.token,jdbcType=VARCHAR},
    region = #{record.region,jdbcType=VARCHAR},
    location = #{record.location,jdbcType=VARCHAR},
    position = #{record.position,jdbcType=VARCHAR},
    prestore_a = #{record.prestoreA,jdbcType=VARCHAR},
    prestore_b = #{record.prestoreB,jdbcType=VARCHAR},
    prestore_c = #{record.prestoreC,jdbcType=VARCHAR},
    create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cnesa.authority.entity.User">
    update AUTH_USER
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="icon != null">
        icon = #{icon,jdbcType=VARCHAR},
      </if>
      <if test="faxNumber != null">
        fax_number = #{faxNumber,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="userType != null">
        user_type = #{userType,jdbcType=INTEGER},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="orgId != null">
        org_id = #{orgId,jdbcType=VARCHAR},
      </if>
      <if test="comId != null">
        com_id = #{comId,jdbcType=VARCHAR},
      </if>
      <if test="token != null">
        token = #{token,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        region = #{region,jdbcType=VARCHAR},
      </if>
      <if test="location != null">
        location = #{location,jdbcType=VARCHAR},
      </if>
      <if test="position != null">
        position = #{position,jdbcType=VARCHAR},
      </if>
      <if test="prestoreA != null">
        prestore_a = #{prestoreA,jdbcType=VARCHAR},
      </if>
      <if test="prestoreB != null">
        prestore_b = #{prestoreB,jdbcType=VARCHAR},
      </if>
      <if test="prestoreC != null">
        prestore_c = #{prestoreC,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cnesa.authority.entity.User">
    update AUTH_USER
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      icon = #{icon,jdbcType=VARCHAR},
      fax_number = #{faxNumber,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      user_type = #{userType,jdbcType=INTEGER},
      sex = #{sex,jdbcType=INTEGER},
      birthday = #{birthday,jdbcType=TIMESTAMP},
      org_id = #{orgId,jdbcType=VARCHAR},
      com_id = #{comId,jdbcType=VARCHAR},
      token = #{token,jdbcType=VARCHAR},
      region = #{region,jdbcType=VARCHAR},
      location = #{location,jdbcType=VARCHAR},
      position = #{position,jdbcType=VARCHAR},
      prestore_a = #{prestoreA,jdbcType=VARCHAR},
      prestore_b = #{prestoreB,jdbcType=VARCHAR},
      prestore_c = #{prestoreC,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <!-- 自定义 -->
  <select id="selectByUsername" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from AUTH_USER
    where username = #{username,jdbcType=VARCHAR}
  </select>

  <select id="selectUserPage" resultMap="BaseResultMap">
    SELECT
    t.id,
    t.username,
    t.password,
    t.real_name,
    t.email,
    t.mobile,
    t.icon,
    t.fax_number,
    t.status,
    t.user_type,
    t.sex,
    t.birthday,
    t.org_id,
    t.com_id,
    t.token,
    t.region,
    t.location,
    t.position,
    t.prestore_a,
    t.prestore_b,
    t.prestore_c,
    t.create_time,
    s.`name` AS organizationName,
    o.id AS roleId,
    o.role_name AS roleName,
    c.name AS companyName
    FROM
    AUTH_USER t
    LEFT JOIN AUTH_USER_ROLE r on t.id = r.user_id
    LEFT JOIN AUTH_ROLE o on o.id = r.role_id
    LEFT JOIN AUTH_ORGANIZATION s on t.org_id = s.id
    LEFT JOIN MG_COMPANY c on c.id = t.com_id
    <where>
      <if test=" username != null and username != '' ">
        t.username = #{username}
      </if>
      <if test=" orgId != null ">
        t.org_id = #{orgId}
      </if>
      <if test=" startTime != null ">
        <![CDATA[ and t.create_time >= #{startTime} ]]>
      </if>
      <if test=" endTime != null ">
        <![CDATA[ and t.create_time <= #{endTime} ]]>
      </if>
      <if test=" orgId != null ">
        <![CDATA[ and t.org_id <= #{orgId} ]]>
      </if>
    </where>
  </select>

  <select id="selectUserById" resultMap="BaseResultMap" parameterType="java.lang.String">
    SELECT
    t.id,
    t.username,
    t.password,
    t.real_name,
    t.email,
    t.mobile,
    t.icon,
    t.fax_number,
    t.status,
    t.user_type,
    t.sex,
    t.birthday,
    t.org_id,
    t.com_id,
    t.token,
    t.region,
    t.location,
    t.position,
    t.prestore_a,
    t.prestore_b,
    t.prestore_c,
    t.create_time,
    s.`name` AS organizationName,
    o.id AS roleId,
    o.role_name AS roleName
    FROM
    AUTH_USER t
    LEFT JOIN AUTH_USER_ROLE r on t.id = r.user_id
    LEFT JOIN AUTH_ROLE o on o.id = r.role_id
    LEFT JOIN AUTH_ORGANIZATION s on t.org_id = s.id
    <where>
      t.id = #{id}
    </where>
  </select>
  <select id="selectAccountByUserId" resultType="java.util.HashMap">
    SELECT
      u.id,
      u.username,
      r.role_name as roleName,
      u.position,
      c.name as companyName
    FROM AUTH_USER u LEFT JOIN AUTH_USER_ROLE ur ON u.id = ur.user_id
    LEFT JOIN AUTH_ROLE r ON ur.role_id = r.id
    LEFT JOIN MG_COMPANY c ON u.com_id = c.id
    WHERE u.id = #{userId}
  </select>
</mapper>